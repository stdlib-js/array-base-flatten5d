// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,o=Object.prototype,n=o.toString,a=o.__defineGetter__,f=o.__defineSetter__,i=o.__lookupGetter__,l=o.__lookupSetter__;function u(r,e,t){var o,n,a,f,i,l,u,c,_,p,s,b,y,d,v;if(n=e[4],a=e[3],f=e[2],i=e[1],l=e[0],o=[],t){for(u=0;u<n;u++)for(c=0;c<a;c++)for(_=0;_<f;_++)for(p=0;p<i;p++)for(s=0;s<l;s++)o.push(r[s][p][_][c][u]);return o}for(s=0;s<l;s++)for(v=r[s],p=0;p<i;p++)for(d=v[p],_=0;_<f;_++)for(y=d[_],c=0;c<a;c++)for(b=y[c],u=0;u<n;u++)o.push(b[u]);return o}function c(r,e,t,o,n,a){var f,i,l,u,c,_,p,s,b,y,d,v,g,j,m;if(f=e[4],i=e[3],l=e[2],u=e[1],c=e[0],m=a,t){for(_=0;_<f;_++)for(p=0;p<i;p++)for(s=0;s<l;s++)for(b=0;b<u;b++)for(y=0;y<c;y++)o[m]=r[y][b][s][p][_],m+=n;return o}for(y=0;y<c;y++)for(j=r[y],b=0;b<u;b++)for(g=j[b],s=0;s<l;s++)for(v=g[s],p=0;p<i;p++)for(d=v[p],_=0;_<f;_++)o[m]=d[_],m+=n;return o}e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var u,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(i.call(r,e)||l.call(r,e)?(u=r.__proto__,r.__proto__=o,delete r[e],r[e]=t.value,r.__proto__=u):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&f&&f.call(r,e,t.set),r},e(u,"assign",{configurable:!1,enumerable:!1,writable:!1,value:c});export{c as assign,u as default};
//# sourceMappingURL=mod.js.map
